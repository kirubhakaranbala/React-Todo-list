{"version":3,"sources":["AddForm.js","actions/cartActions.js","SearchTodo.js","todos.js","Bookmark.js","NavBar.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["AddTodo","state","content","handleChange","e","_this","setState","handleSubmit","preventDefault","props","addTodo","refs","usernameItem","value","_this2","this","react_default","a","createElement","onSubmit","type","onChange","target","ref","Component","connect","dispatch","SearchTodo","console","log","searchTodo","handleSearch","Todos","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDeleteTodo","id","deleteTodo","handleBookmarkTodo","bookmarkTodo","innerText","class","test","filters","length","items","todoList","map","todo","className","key","onClick","src_SearchTodo","AddForm","React","todos","FilterTodo","handleAddDeleteTodo","concat","assertThisInitialized","addedDelete","addedtodoList","Navbar","react_router_dom","to","App","NavBar","react_router","exact","path","component","Bookmark","Boolean","window","location","hostname","match","state1","reducer","arguments","undefined","action","filter","objectSpread","includes","addTodos","item","cnt","toConsumableArray","Math","random","addedTodo","find","existedTodo","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f311e41b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {addTodo } from './actions/cartActions';\r\n\r\nclass AddTodo extends Component{\r\n   /*  state ={\r\ncontent:''\r\n    } \r\n\r\n    handleChange =(e) => {\r\n            this.setState({content:e.target.value\r\n\r\n            });\r\n         \r\n    }\r\n                <form onSubmit={ this.handleSubmit }>\r\n\r\n    */\r\n   state ={\r\n    content:''\r\n        } \r\n    handleChange =(e) => {\r\n       // console.log(e);\r\n       this.setState({content:e\r\n\r\n       });\r\n    //  const val=e;    \r\n     // console.log(val);\r\n}\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n          \r\n      // console.log(this.state);\r\n       // const name = this.refs.usernameItem.value;\r\n        //console.log('Your name is', name);\r\n        \r\n         this.props.addTodo(this.state.content);\r\n       this.refs.usernameItem.value='';\r\n \t  } \r\n render(){\r\n    return(\r\n        <div>\r\n            <form onSubmit={this.handleSubmit}>\r\n            <label>Add new todo:</label>\r\n            <input type=\"text\" onChange={(e)=>{this.handleChange(e.target.value)} } ref=\"usernameItem\" />\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\n/*\r\nconst mapStateToProps = (state) => {\r\n\treturn{\r\n        items: state.todos,\r\n        \r\n\t\t \r\n\t }\r\n };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn{\r\n        addTodo :(content)=>{dispatch(addTodo(content))} \r\n\t}\r\n}; */\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn{\r\n \t//items: state.todos\r\n\t\t \r\n\t }\r\n };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn{\r\n \t\taddTodo: (content)=>{dispatch(addTodo(content))}\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddTodo);\r\n\r\n  ","\r\nimport { ADD_TODO,DELETE_TODO,BOOKMARK_TODO,SEARCH_TODO} from './action-types/cart-actions';\r\n\r\n\r\n//add cart action\r\nexport const addTodo= (content)=>{\r\n    return{\r\n        type: \"ADD_TODO\",\r\n        content: content\r\n    }\r\n}\r\n\r\n//add cart action\r\nexport const searchTodo= (content)=>{\r\n    return{\r\n        type: \"SEARCH_TODO\",\r\n        content: content\r\n    }\r\n}\r\n//remove item action\r\nexport const deleteTodo=(id)=>{\r\n    return{\r\n        type: \"DELETE_TODO\",\r\n        id:id\r\n    }\r\n} \r\n\r\n//bookmark item action\r\nexport const bookmarkTodo=(id)=>{\r\n    return{\r\n        type: \"BOOKMARK_TODO\",\r\n        id:id\r\n    }\r\n} \r\n\r\n//AddedDelete item action\r\nexport const addedDelete=(id) =>{\r\n    return {\r\n        type:\"ADDDELETE_TODO\",\r\n        id:id\r\n    }\r\n}\r\n ","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {searchTodo } from './actions/cartActions';\r\n\r\n\r\nclass SearchTodo extends Component\r\n {\r\n    state ={\r\n        content:''\r\n            }\r\n\r\n    handleChange =(e) => {\r\n         console.log(e);\r\n        this.setState({content:e\r\n \r\n        });\r\n        this.props.searchTodo(e);\r\n\r\n      //  const val=e;    \r\n      // console.log(val);\r\n }\r\n \r\nhandleSearch =(e) =>{\r\n    e.preventDefault();\r\n    console.log(e);\r\n //this.props.searchTodo(this.state.content);\r\n  //this.refs.SearchnameItem.value='';\r\n}\r\nrender(){\r\n\r\n    return(\r\n        <div>\r\n        <form onSubmit={this.handleSearch}>\r\n        <label>Search new todo:</label>\r\n        <input type=\"text\" onChange={(e)=>{this.handleChange(e.target.value)} } ref=\"SearchnameItem\" />\r\n\r\n        </form>\r\n    </div>\r\n    );\r\n}\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn{\r\n \t//items: state.todos\r\n\t\t \r\n\t }\r\n };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn{\r\n      searchTodo: (content)=>{dispatch(searchTodo(content))}\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchTodo);\r\n\r\n  ","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {deleteTodo,bookmarkTodo } from './actions/cartActions';\r\nimport AddTodo from './AddForm';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchTodo from './SearchTodo';\r\nimport { debug } from 'util';\r\n\r\n\r\n/*\r\nconst Todos = ({todos,deleteTodo}) =>{\r\n\tconst todoList =  todos.length ? (\r\n\t\ttodos.map(todo=> {\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"collection-item\" key={todo.id}>\r\n\t\t\t\t<span onClick={() => {deleteTodo(todo.id)}}>{todo.content}</span>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t)\r\n\t) : (\r\n\t\t<p className=\"center\">You have no todo's left, yay</p>\r\n\t)\r\n\treturn(\r\n\t<div className=\"todos collection\">\r\n\t{todoList}\r\n\t</div>\r\n\t)\r\n}*/\r\n\r\nclass Todos extends React.Component{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\tclass:'bookmark_border'\r\n\t\t\t\t} \r\n\t}\r\n\t\r\n\t\t\t \r\n\thandleDeleteTodo = (id) =>{\r\n\t\tthis.props.deleteTodo(id);\r\n\t  }\r\n\r\n\t  handleBookmarkTodo = (e,id) =>{\r\n \t\tthis.props.bookmarkTodo(id);\r\n\t\te.preventDefault();\r\n\t\t //this.setState({class: 'book' });\r\n\t\t e.target.innerText='bookmark';\r\n\r\n \t\t\r\n\t  }\r\n\t  \r\n\t\r\n\trender(){\r\n\t\t\r\n\t   var test = this.props.filters.length ? this.props.filters : this.props.items;\r\n\t   //console.log(this.props +\"todo this props\");\r\n\t\tconst todoList =  this.props.items.length ? (\r\n\t\t\ttest.map(todo=> {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<div className=\"collection-item\" key={todo.id}>\r\n\t\t\t\t\t<span >{todo.content}   <i class=\"material-icons dp48  red-text text-darken-3 right\" onClick={() => {this.handleDeleteTodo(todo.id)}}>close</i><i class=\" material-icons dp48 right blue-text waves-effect waves-light \" onClick={(e) => {this.handleBookmarkTodo(e,todo.id)}}>{this.state.class}</i>\r\n</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\r\n\t\t\t)\r\n\t\t) : (\r\n\t\t\t<p className=\"center\">You have no todo's left, yay</p>\r\n\t\t);\r\n\t\treturn(\r\n\t\t\t<div className=\"todo-app container\" >\r\n      \r\n\t\t\t<h1 className=\"center blue-text\">Todo's</h1>\r\n\t\t\t<SearchTodo />\r\n\t\t\t<AddTodo  />\r\n<div className=\"todos collection\">\r\n\t{todoList}\r\n\t</div>\r\n \t\t\t\r\n\t\t\r\n\t\t  </div>\r\n\t\t\r\n\t\r\n \t \r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\tconsole.log(state+\"state before change\");\r\n\treturn{\r\n\t\titems: state.todos,\r\n\t\tfilters:state.FilterTodo\r\n\t\t\r\n\t\t \r\n\t }\r\n };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn{\r\n\t\tdeleteTodo :(id)=>{dispatch(deleteTodo(id))},\r\n\t\tbookmarkTodo :(id)=>{dispatch(bookmarkTodo(id))}\r\n \t}\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Todos);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {deleteTodo,bookmarkTodo,addedDelete } from './actions/cartActions';\r\n import { Link } from 'react-router-dom'\r\n\r\n\r\n/*\r\nconst Todos = ({todos,deleteTodo}) =>{\r\n\tconst todoList =  todos.length ? (\r\n\t\ttodos.map(todo=> {\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"collection-item\" key={todo.id}>\r\n\t\t\t\t<span onClick={() => {deleteTodo(todo.id)}}>{todo.content}</span>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t)\r\n\t) : (\r\n\t\t<p className=\"center\">You have no todo's left, yay</p>\r\n\t)\r\n\treturn(\r\n\t<div className=\"todos collection\">\r\n\t{todoList}\r\n\t</div>\r\n\t)\r\n}*/\r\n\r\nclass Todos extends React.Component{\r\n\thandleAddDeleteTodo = (id) =>{\r\n\t\tconsole.log(`${this} kiru test`);\r\n\t\tthis.props.addedDelete(id);\r\n\t  }\r\n\r\n\t  \r\n\t \r\n\trender(){\r\n\r\n\t\tconst addedtodoList =  this.props.items.length ? (\r\n\t\t\tthis.props.items.map(todo=> {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<div className=\"collection-item\" key={todo.id}>\r\n\t\t\t\t\t<span >{todo.content}   <i class=\"material-icons dp48  red-text text-darken-3 right\" onClick={() => {this.handleAddDeleteTodo(todo.id)}}>close</i>\r\n</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\r\n\t\t\t)\r\n\t\t) : (\r\n\t\t\t<p className=\"center\">You have no todo's left, yay</p>\r\n\t\t);\r\n\t\treturn(\r\n\t\t\t<div className=\"todo-app container\" >\r\n      \r\n\t\t\t<h1 className=\"center blue-text\">Bookmark Todo's</h1>\r\n <div className=\"todos collection\">\r\n\t{addedtodoList}\r\n\t</div>\r\n \t\t\t\r\n\t\t\r\n\t\t  </div>\r\n\t\t\r\n\t\r\n \t \r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn{\r\n\t\titems: state.addTodo\r\n\t\t \r\n\t }\r\n };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn{\r\n\t\taddedDelete :(id)=>{dispatch(addedDelete(id))},\r\n\t\t//bookmarkTodo :(id)=>{dispatch(bookmarkTodo(id))}\r\n \t}\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Todos);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = ()=>{\r\n    return(\r\n        <nav className=\"nav-wrapper blue\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"brand-logo\">Todo's List</Link>\r\n                    \r\n                    <ul className=\"right\">\r\n                        <li><Link to=\"/\">My Todo's</Link></li>\r\n                        <li><Link to=\"/bookmark\">Bookmark</Link></li>\r\n                     </ul>\r\n                </div>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\n \nimport Todos from './todos';\nimport Bookmark from './Bookmark';\nimport { connect } from 'react-redux';\nimport Navbar from './NavBar';\nimport { BrowserRouter,Route,Switch } from 'react-router-dom';\nimport { bookmarkTodo } from './actions/cartActions';\n\nclass App extends Component {\n /* state={\n  todos :[\n  {id:1,content:'buy some milk'},\n\t  {id:2,content:'play mario kart'}\n  ]\n  }\n\n  deleteTodo = (id) => {\n     const todos= this.state.todos.filter(todo=> {\n       return todo.id !== id\n     });\n\n     this.setState({\n       todos\n     })\n  }\n*/\n /* addTodo =(todo) =>{\ntodo.id = Math.random();\nlet todos = [...this.state.todos,todo];\nthis.setState({\n  todos\n})\n  }\n    //  <AddTodo addTodo={this.addTodo}/>\n\n  */\n\n\n  render() {\n    return (\n     <BrowserRouter>\n     <div className=\"App\"> \n      <Navbar />\n      <Switch>\n         <Route exact path=\"/\" component={Todos}/>\n         <Route exact path=\"/bookmark\" component={Bookmark} />\n\n      </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { stat } from \"fs\";\r\nimport { debug } from \"util\";\r\n\r\nconst state1={\r\n    todos :[\r\n    {id:1,content:'buy some milk'},\r\n        {id:2,content:'play mario kart'}\r\n    ],\r\n    addTodo:[],\r\n    FilterTodo:[]\r\n    };\r\n\r\n\r\n    const reducer =(state=state1,action) =>{\r\n        if(action.type === 'DELETE_TODO'){\r\n            const todos= state.todos.filter(todo=> {\r\n                return todo.id !== action.id\r\n              });\r\n         \r\n               return {\r\n                   ...state,todos\r\n               }\r\n                 \r\n              \r\n \r\n        }\r\n        if(action.type === 'SEARCH_TODO'){\r\n              console.log(`${action.content} kiru test`);\r\n           //  const todo1 = state.todos;\r\n            const todos= state.todos.filter(todo=> {\r\n                return (\r\n                    todo.content.includes(action.content)                    );\r\n              });\r\n             // state.FilterTodo = {...state.todos};\r\n        // if(action.content.length>0)\r\n         //{\r\n           //  console.log(1);\r\n               return {...state,\r\n                FilterTodo:todos\r\n                  \r\n                }\r\n               \r\n          /*  }\r\n          else{\r\n            return {\r\n                ...state,\r\n                todos:{...state.FilterTodo}\r\n            }   \r\n               }     */  \r\n              \r\n \r\n        }\r\n\r\n\r\n        if(action.type === 'ADDDELETE_TODO')\r\n        {\r\n            console.log(1231);\r\n            const addTodos = state.addTodo.filter(item => {\r\n                return item.id !==action.id\r\n            });\r\n\r\n            return{\r\n                ...state,\r\n                addTodo:addTodos\r\n            }\r\n        }\r\n\r\n\r\n        if(action.type === 'ADD_TODO'){\r\n           console.log(\"add reducer\");\r\n\r\n           let cnt= action.content;\r\n           return  {\r\n               ...state,\r\n               todos:[...state.todos,{\r\n                id:Math.random(),\r\n                content:cnt}\r\n            ]\r\n               \r\n           \r\n           }\r\n         \r\n        }\r\n\r\n        if(action.type === 'BOOKMARK_TODO')\r\n        {debugger;\r\n            let addedTodo = state.todos.find(item=> item.id===action.id);\r\n            let existedTodo = state.addTodo.find(item=> action.id ===item.id);\r\n         console.log(addedTodo,existedTodo);\r\n            \r\n         if(existedTodo){\r\n            return {\r\n                ...state}\r\n                \r\n         }    else{     \r\n\r\n            return {\r\n                ...state,\r\n                addTodo :[...state.addTodo,addedTodo]\r\n            }\r\n        }\r\n        }\r\n        return state; \r\n    };\r\n\r\n\r\n\r\n\r\n    export default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from  'react-redux';\nimport {createStore} from 'redux';\nimport reducer from './store/reducer';\n\nconst store=createStore(reducer,/* preloadedState, */\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n \n ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}